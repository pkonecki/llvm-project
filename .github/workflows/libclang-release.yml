name: Build libclang

on:
  push:
    branches:
      - 'release/**'
    paths:
      - 'clang/**'
      - 'llvm/**'
      - '.github/workflows/libclang-release.yml'
  pull_request:
    paths:
      - 'clang/**'
      - 'llvm/**'
      - '.github/workflows/libclang-release.yml'

jobs:
  build_clang:
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    name: libclang-release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        build-type:
          - Release
          - Debug
    steps:
    - name: Setup Windows
      if: startsWith(matrix.os, 'windows')
      uses: llvm/actions/setup-windows@master
      with:
        arch: amd64
    - name: Install Ninja
      uses: llvm/actions/install-ninja@master
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Build libclang
      uses: llvm/actions/build-test-llvm-project@master
      with:
        cmake_args: -G Ninja  -DLLVM_ENABLE_PROJECTS="clang" -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}
        build_target: libclang
    - name: Upload binaries
      uses: actions/upload-artifact@v1
      with:
        name: binaries-${{ matrix.os }}-${{ matrix.build-type }}
        path: build/bin/
